spring:
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    consumer:
      group-id: otp-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  mail:
    host: smtp.gmail.com
    port: 465
    username: cainhatthanhdemofis@gmail.com
    password: ejdzjnfjmtrwppcu
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
          ssl:
            enable: true



  datasource:
    url: jdbc:postgresql://postgres:5432/MiniApp  # Use service name 'postgres'
    username: thanhcn3
    password: 12345
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  data:
    mongodb:
      uri: mongodb://thanhcn3:12345@mongodb:27017/MiniApp  # Use service name 'mongodb'
      database: MiniApp


    redis:
      host: redis  # Use service name 'redis'
      port: 6379
      timeout: 60000


jwt:
  secret: 5eba11a05584e350473b6f4202a6c27c25391bf45e67b0ed03c14cb983523a81223ff1d67e31ade3de4e5ea4c5d01651a115e6c6dd6aa28dba227b647d1753be
  expiration: 36000000  # 10 hours in milliseconds

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

logging:
  level:
    org.springframework.security: DEBUG
    com.example.user_service: DEBUG
