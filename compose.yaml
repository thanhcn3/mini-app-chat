version: '3.8'  #version cá»§a Docker Compose

services:
  postgres:
    image: postgres:15
    container_name: mini_app_postgres
    restart: always
    environment:
      POSTGRES_USER: thanhcn3
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: MiniApp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongodb:
    image: mongo:6
    container_name: mini_app_mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: thanhcn3
      MONGO_INITDB_ROOT_PASSWORD: 12345
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7
    container_name: mini_app_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  kafka:
    image: bitnami/kafka:latest
    environment:
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENER_NAME_INTERNAL: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_KRAFT_CLUSTER_ID: L5+YvX25k2F7WYz5bz1xyw==
      KAFKA_CFG_NODE_ID: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9092:9092" # Client port
      - "9093:9093" # Internal controller port
    networks:
      - kafka-net

volumes:
  postgres_data:
  mongo_data:
  redis_data:

networks:
  kafka-net:
    driver: bridge